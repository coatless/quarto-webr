---
title: "Test: Escape Output with HTML Entities"
format: html
engine: knitr
filters:
  - webr
---

Ensure HTML output is escaped or passed t hrough

## Interactive

### results: markup
```{webr-r}
# This function converts a markdown link into HTML
"[Posit](https://posit.co)" |> (\(.) {
  text <- sub("\\].*", "", sub(".*\\[", "", .))
  url <- sub("\\).*", "", sub(".*\\(", "", .))
  
  writeLines(noquote(paste0('<a href="', url, '" target = "_blank">', text, '</a>')))
})()
```

## Non-interactive

### results: markup

```{webr-r}
#| context: output
# This function converts a markdown link into HTML
"[Posit](https://posit.co)" |> (\(.) {
  text <- sub("\\].*", "", sub(".*\\[", "", .))
  url <- sub("\\).*", "", sub(".*\\(", "", .))
  
  writeLines(noquote(paste0('<a href="', url, '" target = "_blank">', text, '</a>')))
})()
```

### results: asis

```{webr-r}
#| context: output
#| results: asis
# This function converts a markdown link into HTML
"[Posit](https://posit.co)" |> (\(.) {
  text <- sub("\\].*", "", sub(".*\\[", "", .))
  url <- sub("\\).*", "", sub(".*\\(", "", .))
  
  writeLines(noquote(paste0('<a href="', url, '" target = "_blank">', text, '</a>')))
})()
```


### output: asis

```{webr-r}
#| context: output
#| output: asis
# This function converts a markdown link into HTML
"[Posit](https://posit.co)" |> (\(.) {
  text <- sub("\\].*", "", sub(".*\\[", "", .))
  url <- sub("\\).*", "", sub(".*\\(", "", .))
  
  writeLines(noquote(paste0('<a href="', url, '" target = "_blank">', text, '</a>')))
})()
```

