[
  {
    "objectID": "webr-readme-example.html",
    "href": "webr-readme-example.html",
    "title": "webR in Quarto HTML Documents",
    "section": "",
    "text": "This is a webr-enabled code cell in a Quarto HTML document.\nLoading\n  webR..."
  },
  {
    "objectID": "webr-demo.html",
    "href": "webr-demo.html",
    "title": "webR-enabled code cells",
    "section": "",
    "text": "webR-enabled code cell are established by using {webr-r} in a Quarto HTML document.\nLoading\n  webR...\n\n\n  \n\n\nFor instance, the above webr-enabled code cell was created by typing into the Quarto document:\n```{webr-r}\n1 + 1\n```"
  },
  {
    "objectID": "webr-demo.html#demo",
    "href": "webr-demo.html#demo",
    "title": "webR-enabled code cells",
    "section": "",
    "text": "webR-enabled code cell are established by using {webr-r} in a Quarto HTML document.\nLoading\n  webR...\n\n\n  \n\n\nFor instance, the above webr-enabled code cell was created by typing into the Quarto document:\n```{webr-r}\n1 + 1\n```"
  },
  {
    "objectID": "webr-demo.html#sample-cases",
    "href": "webr-demo.html#sample-cases",
    "title": "webR-enabled code cells",
    "section": "Sample cases",
    "text": "Sample cases\n\nFit a linear regression model\nLoading\n  webR...\n\n\n  \n\n\n\n\nCreate a graph with base R\nLoading\n  webR...\n\n\n  \n\n\n\n\nPackages\n\nAvailable Packages\nYou can view what packages are available for webR by either executing the following R code (either with WebR or just R):\nLoading\n  webR...\n\n\n  \n\n\nOr, by navigating to the WebR repository:\nhttps://github.com/r-wasm/webr-repo/blob/main/repo-packages\n\n\nInstalling a Package\nInstalling a package interactively is done using webr::install() inside of a {webr-r} code cell.\nNote: Installing ggplot2 may take at least 2 minutes if COEP & COOP headers are not set.\nLoading\n  webR...\n\n\n  \n\n\n\n\nUsing a Package\nOnce ggplot2 is loaded, then use the package as normal.\nLoading\n  webR...\n\n\n  \n\n\n\n\n\nDefine variables and re-use them in later cells\nLoading\n  webR...\n\n\n  \n\n\nLoading\n  webR...\n\n\n  \n\n\n\n\nEscape characters in a string\nLoading\n  webR...\n\n\n  \n\n\n\n\nAnonymous function definition\nLoading\n  webR...\n\n\n  \n\n\n\n\nEmpty code cell\nLoading\n  webR...\n\n\n  \n\n\n\n\nPrior code cell\n\nLoading\n  webR...\n\n\n  \n\n\n\n\n\nPre-rendered code cell\n\nmessage(\"Hello!\")\n\nHello!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": ".",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "webr-internal-cell.html",
    "href": "webr-internal-cell.html",
    "title": "Hidden webR code cells",
    "section": "",
    "text": "In this example, we create a hidden setup code cell within the document by using the special comment of #| context: setup. The setup code cell executes code in the background and does not display the code or its output.\n```{webr-r}\n#| context: setup\nmeaning_of_life = 42\n```\nThus, we have pre-loaded the meaning_of_life variable. So, if we run the next code cell, then we will see the value of meaning_of_life being displayed as 42 instead of an error.\n\t\nLoading\n  webR...\n\n\n  \n\n\n\n\n\n\n\n\nCaution\n\n\n\nBe advised that the contents of the hidden code cell is displayed if the web page’s source is viewed."
  },
  {
    "objectID": "webr-internal-cell.html#hidden-evaluation-without-output",
    "href": "webr-internal-cell.html#hidden-evaluation-without-output",
    "title": "Hidden webR code cells",
    "section": "",
    "text": "In this example, we create a hidden setup code cell within the document by using the special comment of #| context: setup. The setup code cell executes code in the background and does not display the code or its output.\n```{webr-r}\n#| context: setup\nmeaning_of_life = 42\n```\nThus, we have pre-loaded the meaning_of_life variable. So, if we run the next code cell, then we will see the value of meaning_of_life being displayed as 42 instead of an error.\n\t\nLoading\n  webR...\n\n\n  \n\n\n\n\n\n\n\n\nCaution\n\n\n\nBe advised that the contents of the hidden code cell is displayed if the web page’s source is viewed."
  },
  {
    "objectID": "webr-internal-cell.html#hidden-loading-of-a-dataset",
    "href": "webr-internal-cell.html#hidden-loading-of-a-dataset",
    "title": "Hidden webR code cells",
    "section": "Hidden Loading of a Dataset",
    "text": "Hidden Loading of a Dataset\nOutside of just specifying a single variable, we can use the setup hidden code cell to pre-load and wrangle an entire data set. This allows for students to directly interact with a loaded data set.\n```{webr-r}\n#| context: hidden\n\n# Download a data set\ndownload.file(\n  'https://raw.githubusercontent.com/coatless/raw-data/main/penguins.csv',\n  'penguins.csv'\n)\n\n# Read data\ndf = read.csv(\"penguins.csv\")\n```\n\t\nLoading\n  webR...\n\n\n  \n\n\n\n\n\n\n\n\nNote\n\n\n\nIf the setup code needs the present of R packages, we suggest specifying the required packages in the document’s YAML. This option communicates to the end user that the webpage is not yet ready to explore through a clear status update at the top. For example, we could add dplyr and ggplot2 using:\n---\nwebr:\n  packages: ['ggplot2', 'dplyr']\n---"
  },
  {
    "objectID": "webr-internal-cell.html#hidden-solution-checking-of-student-work",
    "href": "webr-internal-cell.html#hidden-solution-checking-of-student-work",
    "title": "Hidden webR code cells",
    "section": "Hidden Solution Checking of Student Work",
    "text": "Hidden Solution Checking of Student Work\n\n\n\n\n\n\nWarning\n\n\n\nBe advised that any solution written into a webR hidden code cell can be obtained by viewing the document’s HTML source. Please avoid using this option for formal assessment (exams, quizzes, homework, …).\n\n\nLastly, the webR document can be used to check student answers. We can make available an answer key and a comparison function within the document.\nFor instance, the solution data frame might look a bit like:\n```{webr-r}\n#| context: hidden\nanswer_frame &lt;- data.frame(\n  problem = c(\"1a\", \"1b\", \"2\"),\n  answer = c(10, 2, 3/16),\n  tol = c(0.001, 0, 1/32)\n)\n```\nNext, we can define an internal check function like so:\n```{webr-r}\n#| context: hidden\ncheck &lt;- function(problem, answer) {\n  aframe &lt;- answer_frame\n  if(!problem %in% aframe$problem) stop(paste0(\"Please enter a valid problem. (\", paste0(aframe$problem, collapse = \",\"), \")\"))\n\n  solution &lt;- aframe[which(aframe$problem == problem), \"answer\"]\n\n  ifelse(\n    all.equal(answer, solution, tolerance = 0.001) == TRUE,\n              \"Correct! Well done.\",\n              \"Incorrect! Good attempt. Let's try again?\")\n}\n```\n\t\nStudents can then compare their answers to the answer key by using the check() function.\nConsider the question:\n\nWhat is 9 + 1?\n\nLoading\n  webR..."
  }
]