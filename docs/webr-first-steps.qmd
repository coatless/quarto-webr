---
title: "Making your first webR-powered Quarto document"
author: "James Joseph Balamuta"
date: "03-20-2023"
date-modified: last-modified
format: 
  html:
    toc: true
filters:
  - webr
---

## Installation 

To use this extension in a Quarto project, install it from within the project's working directory by typing into **Terminal**:

``` bash
quarto add coatless/quarto-webr
```

![Demonstration of using the Terminal tab to install the extension.](https://i.imgur.com/aVuBdyN.png)

## Usage

For each document, place the `webr` filter in the document's header:

```yaml
filters:
  - webr
```

Then, place the R code for `webR` in a code block marked with `{webr-r}`

````markdown
---
title: webR in Quarto HTML Documents
format: html
engine: knitr
filters:
  - webr
---

This is a webr-enabled code cell in a Quarto HTML document.

```{webr-r}
fit = lm(mpg ~ am, data = mtcars)
summary(fit)
```
````

The rendered document can be viewed online [here](https://coatless.github.io/quarto-webr/webr-readme-example.html).

When `quarto render` or `quarto preview` is called, the filter will execute under `engine: knitr`. 
During the execution, the filter adds two files to the working directory: `webr-worker.js` and `webr-serviceworker.js`. These files allow for the 
`webR` session to be started and must be present with the rendered output. 

**Note:** If `engine: knitr` is not specified, then the `jupyter` compute engine will be used by default.
