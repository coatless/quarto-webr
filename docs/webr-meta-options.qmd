---
title: "Customizing webR from the Quarto Extension"
format: 
  html:
    toc: true
engine: knitr
webr:
  channel-type: "post-message"
filters:
- webr
---

The `quarto-webr` extension supports specifying the following `WebROptions` options:

- `home-dir`: The WebAssembly userâ€™s home directory and initial working directory ([`Documentation`](https://docs.r-wasm.org/webr/latest/api/js/interfaces/WebR.WebROptions.html#homedir)). Default: `'/home/web_user'`.
- `base-url`: The base URL used for downloading R WebAssembly binaries ([`Documentation`](https://docs.r-wasm.org/webr/latest/api/js/interfaces/WebR.WebROptions.html#baseurl)). Default: `'https://webr.r-wasm.org/[version]/'`.
- `channel-type`: The communication channel type to interact with webR ([`Documentation`](https://docs.r-wasm.org/webr/latest/api/js/interfaces/WebR.WebROptions.html#channeltype)). Default: `"automatic"` (0). Alternative options are: `"shared-array-buffer"` (1), `"service-worker"` (2), `"post-message"` (3).
   - We recommend using `"post-message"` option if GitHub Pages or Quarto Pub are serving the webR-enabled document.
   - However, this option prevents the interruption of running _R_ code and prevents the use of nested R REPLs (`readline()`, `menu()`, `browser()`, etc.) 
- `service-worker-url`: The base URL from where to load JavaScript worker scripts when loading webR with the ServiceWorker communication channel mode ([`Documentation`](https://docs.r-wasm.org/webr/latest/api/js/interfaces/WebR.WebROptions.html#serviceworkerurl)). Default: `''`.

The extension also has native options for:

- `show-startup-message`: Display in the document header the state of WebR initialization. Default: `true`
- `show-header-message`: Display in the document header whether COOP and COEP headers are in use for faster page loads. Default: `false`

For these options to be active, they must be placed underneath the `webr` entry in the documentation header, e.g.

```markdown
---
title: WebR in Quarto HTML Documents
format: html
engine: knitr
webr: 
  show-startup-message: false
  show-header-message: false
  home-dir: '/home/r-user/'
  packages: ['ggplot2', 'dplyr']
filters:
  - webr
---
```

## Packages

By default, the `quarto-webr` extension avoids loading or requesting additional packages. Additional packages can be added 
when the document is first opened or on per-code cell basis. You can view what packages are available by either executing 
the following R code (either with WebR or just R):

```r
available.packages(repos="https://repo.r-wasm.org/", type="source")
```

Or, by navigating to the WebR repository:

<https://github.com/r-wasm/webr-repo/blob/main/repo-packages>


## Install on document open

Add to the document header YAML the `packages` key under `webr` with each package listed using an array, e.g. 

```yaml
---
webr:
  packages: ['ggplot2', 'dplyr']
---
```

## Install on an as needed basis

Packages may also be installed inside of a code cell through the built-in [`webr::install()` function](https://docs.r-wasm.org/webr/latest/packages.html#example-installing-the-matrix-package). For example, to install `ggplot2`, you would need to use: 

```{{webr-r}}
webr::install("ggplot2")
```

This would generate

```{webr-r}
webr::install("ggplot2")
```
